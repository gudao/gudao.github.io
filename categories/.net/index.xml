<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.Net on 古道的技术博客</title>
    <link>https://gudao.github.io/categories/.net/</link>
    <description>Recent content in .Net on 古道的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>gudao</copyright>
    <lastBuildDate>Sat, 18 Apr 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://gudao.github.io/categories/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微信收货地址共享接口蕴藏的玄机</title>
      <link>https://gudao.github.io/post/%E5%BE%AE%E4%BF%A1%E6%94%B6%E8%B4%A7%E5%9C%B0%E5%9D%80%E5%85%B1%E4%BA%AB%E6%8E%A5%E5%8F%A3%E8%95%B4%E8%97%8F%E7%9A%84%E7%8E%84%E6%9C%BA/</link>
      <pubDate>Sat, 18 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/%E5%BE%AE%E4%BF%A1%E6%94%B6%E8%B4%A7%E5%9C%B0%E5%9D%80%E5%85%B1%E4%BA%AB%E6%8E%A5%E5%8F%A3%E8%95%B4%E8%97%8F%E7%9A%84%E7%8E%84%E6%9C%BA/</guid>
      <description>最近微信的公众平台接口的变动很大，让人有点晕。今天被“收货地址共享接口”的SHA1算法彻底的玩了一把。 众里寻他。按照JS-SDK的常理这个接</description>
    </item>
    
    <item>
      <title>c#调用c/c&#43;&#43;类库</title>
      <link>https://gudao.github.io/post/c#%E8%B0%83%E7%94%A8cc&#43;&#43;%E7%B1%BB%E5%BA%93/</link>
      <pubDate>Wed, 11 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/c#%E8%B0%83%E7%94%A8cc&#43;&#43;%E7%B1%BB%E5%BA%93/</guid>
      <description>接触c#久了难免接触其他语言的类库，懂得了类型的对应关系可能对以后的学习带来点便利。 C++C#int*ref intintintunsigned intuintconst char*stringconst void*IntPtr返回值 const char *IntPtr 下面举例说明I</description>
    </item>
    
    <item>
      <title>WinForm ListView不分页加载大量数据</title>
      <link>https://gudao.github.io/post/winform-listview%E4%B8%8D%E5%88%86%E9%A1%B5%E5%8A%A0%E8%BD%BD%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 19 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/winform-listview%E4%B8%8D%E5%88%86%E9%A1%B5%E5%8A%A0%E8%BD%BD%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE/</guid>
      <description>WinForm的ListView在加载大量数据时会出现闪烁的问题，同时数据加载很慢。如果你的列表中有超过千条的数据且不做特殊处理还是用普通的</description>
    </item>
    
    <item>
      <title>【推荐】C#写的类资源管理器</title>
      <link>https://gudao.github.io/post/%E6%8E%A8%E8%8D%90c#%E5%86%99%E7%9A%84%E7%B1%BB%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8/</link>
      <pubDate>Mon, 27 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/%E6%8E%A8%E8%8D%90c#%E5%86%99%E7%9A%84%E7%B1%BB%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8/</guid>
      <description>http://www.codeproject.com/Articles/15059/C-File-Browser#Background</description>
    </item>
    
    <item>
      <title>自己写了个小软件：一键关闭显示器</title>
      <link>https://gudao.github.io/post/%E8%87%AA%E5%B7%B1%E5%86%99%E4%BA%86%E4%B8%AA%E5%B0%8F%E8%BD%AF%E4%BB%B6%E4%B8%80%E9%94%AE%E5%85%B3%E9%97%AD%E6%98%BE%E7%A4%BA%E5%99%A8/</link>
      <pubDate>Thu, 26 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/%E8%87%AA%E5%B7%B1%E5%86%99%E4%BA%86%E4%B8%AA%E5%B0%8F%E8%BD%AF%E4%BB%B6%E4%B8%80%E9%94%AE%E5%85%B3%E9%97%AD%E6%98%BE%E7%A4%BA%E5%99%A8/</guid>
      <description>中午听着歌睡觉，又心疼自己的本本，于是写了个关闭显示器的小工具，跟大家分享！ 猛击下载，解压直接使用（支持快捷键shift+C）！ 如果你懂点C</description>
    </item>
    
    <item>
      <title>c# ListView 显示win7风格</title>
      <link>https://gudao.github.io/post/c#-listview-%E6%98%BE%E7%A4%BAwin7%E9%A3%8E%E6%A0%BC/</link>
      <pubDate>Fri, 15 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/c#-listview-%E6%98%BE%E7%A4%BAwin7%E9%A3%8E%E6%A0%BC/</guid>
      <description>如果你用winform 开发应用，而且没有使用第三方的美化控件还想让应用漂亮一点， 那就使用下面的方法吧 先声明一下这个： [DllImport(&amp;quot;uxtheme.dll&amp;quot;, CharSet = CharSet.Unicode, EntryPoint = &amp;quot;SetWindowTheme&amp;quot;)] private static extern Int32 SetWindowTheme(IntPtr</description>
    </item>
    
    <item>
      <title>自定义httpModule在IIS6和IIS7下的配置区别</title>
      <link>https://gudao.github.io/post/%E8%87%AA%E5%AE%9A%E4%B9%89httpmodule%E5%9C%A8iis6%E5%92%8Ciis7%E4%B8%8B%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 03 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/%E8%87%AA%E5%AE%9A%E4%B9%89httpmodule%E5%9C%A8iis6%E5%92%8Ciis7%E4%B8%8B%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8C%BA%E5%88%AB/</guid>
      <description>微软真的很气人，不同IIS配置文件要不同配置，部署一个程序时间都花在查找区别上了。 IIS6下需要配置在&amp;lt;system.web&amp;gt;节</description>
    </item>
    
    <item>
      <title>Asp.Net MVC3 &#43;uploadify 上传文件大小限制</title>
      <link>https://gudao.github.io/post/asp.net-mvc3-&#43;uploadify-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/</link>
      <pubDate>Thu, 26 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/asp.net-mvc3-&#43;uploadify-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/</guid>
      <description>真他妈一下午就光在弄这个了，uploadify总是显示Http Error用 &#39;onError&#39;: function (event,queueId,fileObj,errorObj) { alert(errorObj.info); } 捕获了一下，显示404错误。 最后找到原因是IIS7把文</description>
    </item>
    
    <item>
      <title>怎样使用Windows认证连接SQL Server</title>
      <link>https://gudao.github.io/post/%E6%80%8E%E6%A0%B7%E4%BD%BF%E7%94%A8windows%E8%AE%A4%E8%AF%81%E8%BF%9E%E6%8E%A5sql-server/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/%E6%80%8E%E6%A0%B7%E4%BD%BF%E7%94%A8windows%E8%AE%A4%E8%AF%81%E8%BF%9E%E6%8E%A5sql-server/</guid>
      <description>连接方式有两种，如果你是在web.config文件中&amp;lt;connectionStrings&amp;gt;节点中就必须包括Trusted_Con</description>
    </item>
    
    <item>
      <title>DES加密/解密类</title>
      <link>https://gudao.github.io/post/des%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%B1%BB/</link>
      <pubDate>Fri, 09 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/des%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%B1%BB/</guid>
      <description>/// &amp;lt;summary&amp;gt; /// 加密数据 /// &amp;lt;/summary&amp;gt; /// &amp;lt;param name=&amp;#34;Text&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;param name=&amp;#34;sKey&amp;#34;&amp;gt;&amp;lt;/param&amp;gt; /// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt; public static string Encrypt(string Text,string sKey) { DESCryptoServiceProvider des = new DESCryptoServiceProvider(); byte[] inputByteArray; inputByteArray=Encoding.Default.GetBytes(Text); des.Key = ASCIIEncoding.ASCII.GetBytes(System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(sKey, &amp;#34;md5&amp;#34;).Substring(0, 8)); des.IV = ASCIIEncoding.ASCII.GetBytes(System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(sKey, &amp;#34;md5&amp;#34;).Substring(0, 8)); System.IO.MemoryStream ms=new System.IO.MemoryStream(); CryptoStream cs=new CryptoStream(ms,des.CreateEncryptor(),CryptoStreamMode.Write); cs.Write(inputByteArray,0,inputByteArray.Length); cs.FlushFinalBlock(); StringBuilder ret=new StringBuilder(); foreach( byte b in ms.ToArray()) { ret.AppendFormat(&amp;#34;{0:X2}&amp;#34;,b); } return ret.ToString(); } /// &amp;lt;summary&amp;gt; /// 解密数</description>
    </item>
    
    <item>
      <title>Asp.Net去除没用的Httpheader</title>
      <link>https://gudao.github.io/post/asp.net%E5%8E%BB%E9%99%A4%E6%B2%A1%E7%94%A8%E7%9A%84httpheader/</link>
      <pubDate>Wed, 07 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://gudao.github.io/post/asp.net%E5%8E%BB%E9%99%A4%E6%B2%A1%E7%94%A8%E7%9A%84httpheader/</guid>
      <description>使用IIS和Asp.net的Web服务器,通常在默认情况下，HTTP响应头会包含3个Web服务器的自身识别头: 1:X-Powered-By 2:X-AspNet-Version 3:X-AspNetMvc-Version 去除方法分别为： 1：In</description>
    </item>
    
  </channel>
</rss>
